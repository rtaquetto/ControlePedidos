@model ControlePedidos.Models.ViewModels.ProdutoFormViewModel

@{
    ViewData["Title"] = "Editar";
}

<h1>@ViewData["Title"]</h1>

<h4>Produto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Produto.Id" />
            <div class="form-group">
                <label asp-for="Produto.Nome" class="control-label"></label>
                <input asp-for="Produto.Nome" class="form-control" />
                <span asp-validation-for="Produto.Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Produto.ValorUnitario" class="control-label"></label>
                <input asp-for="Produto.ValorUnitario" class="form-control" />
                <span asp-validation-for="Produto.ValorUnitario" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Produto.CategoriaId" class="control-label"></label>
                <select asp-for="Produto.CategoriaId" asp-items="@(new SelectList(Model.Categorias,"Id","Nome"))" class="form-control"></select>
                <span asp-validation-for="Produto.CategoriaId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Confirmar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
